Title: BioCypher graph schema configuration file

# This configuration file establishes the hierarchy and connectivity in a newly
# set-up BioCypher property graph database. Naming should adhere to Biolink
# nomenclature (available at https://biolink.github.io/biolink-model/ or via 
# the python module 'biolink-model-toolkit').

# The BioCypher YAML file specifies only the leaves of the hierarchy tree of
# the desired graph; the hierarchical structure of entities will be derived 
# from the Biolink model. Thus, only the immediate constituents of the graph
# need to be specified in the schema config.


# ---
# "Named Things"
# ---
# The implementation of named things is fairly straightforward, since they are
# usually represented in node form, which is also the Biolink recommendation.
# The same is not true for associations.
#
# A little more complex is the representation of aggregates of named things, 
# for instance in the case of functional protein complexes. These are represented
# by so-called "mixins", which are not officially part of the hierarchy.

# Protein: # this is the Biolink entity name and will be used as the node label
         #do not modify or else the Biolink translation will fail
  # represented_as: node
  # preferred_id: UniProtKB # this is the Biolink spelling of the identifier used
  #it represents a CURIE URI prefix
  # label_in_input: protein # modify this to allow translation
  # this is the entity name (ie, type) in the input database
  

# microRNA:
  # represented_as: node
  # preferred_id: MIR
  # label_in_input: mirna
    
# MacromolecularComplexMixin:
  # represented_as: node
  # preferred_id: CPX
  # label_in_input: complex

# OrganismTaxon:
  # represented_as: node
  # preferred_id: NCBITaxon
  # label_in_input: taxon

# Publication:
  # represented_as: node
  # preferred_id: NLMID
# ConfidenceLevel:
  # represented_as: node
  # preferred_id: None

# Cell:
  # represented_as: node
  # preferred_id: CL
  
Pathway:
  represented_as: node
  preferred_id: [REACT, KEGG.PATHWAY]
  label_in_input: [Pathway, kegg_Pathway]
  
Protein:
  represented_as: node
  preferred_id: UniProtKB
  label_in_input: Protein
  
Disease:
  represented_as: node
  preferred_id: [MONDO, EFO, ORPHANET, KEGG.DISEASE]
  label_in_input: [MONDO, EFO, Orphanet, KEGG.DISEASE]
  
SmallMolecule:  # drug has only RXCUI, NDC, UMLS identifiers
  represented_as: node
  preferred_id: DRUGBANK
  label_in_input: Drug
  
Phenotype:
  represented_as: node
  preferred_id: HP
  label_in_input: HPO
  
MolecularMixture: # there is no compound in Biolink. could be molecular mixture
  represented_as: node
  preferred_id: CHEMBL.COMPOUND
  label_in_input: Compound
      


# ---
# Associations
# ---
# Associations are not supposed to be represented in node form as per the 
# specifications of Biolink. However, in an analytic context, it often makes 
# sense to represent interactions as nodes in Neo4j, because it enables, for
# instance, the annotation of a relationship with a publication as source of
# evidence (also known as reification in the knowledge graph world). 

# The Biolink specifications for these types of relationships do 
# not go into depth; for example, the hierarchy for molecular interactions
# (ie, "associations") ends at "PairwiseMolecularInteraction", there are no 
# explicit terms for protein-protein-interaction, phosphorylation, miRNA-
# targeting, etc. Biolink proposes to use interaction identifiers from 
# ontologies, such as https://www.ebi.ac.uk/ols/ontologies/mi/.

# PairwiseMolecularInteraction:
  # represented_as: node
  # preferred_id: EBI

# DiseaseToEntityAssociationMixin:
  # represented_as: edge
  # preferred_id: tbd
  # source: Disease
  # target: Protein
# EntityToDiseaseAssociationMixin:
  # represented_as: edge
  # preferred_id: tbd
  # source: Protein
  # target: Disease


# below not in biolink
# will insert into custom biolink yaml, get hierarchy from there
# PostTranslationalInteraction:
  # represented_as: node
  # preferred_id: concat_ids
  # source: Protein 
  # optional other sources/targets?
  # source and target need to adhere to Biolink naming, otherwise the
  # meta-graph will not work
  # target: Protein
  # label_in_input: post_translational
  # label_as_edge: INTERACTS_POST_TRANSLATIONAL
# Phosphorylation:
  # represented_as: edge
  # preferred_id: tbd
  # source: Protein
  # target: Protein
# Acetylation:
  # represented_as: edge
  # preferred_id: tbd
  # source: Protein
  # target: Protein

Interacts_With: # PostTranslationalInteraction, interacts_with
# can be more granular if info is there
  represented_as: edge
  preferred_id: custom
  source: Protein
  target: Protein
  label_as_edge: Interacts_With
  
Is_Associated_With: 
# could be broken up and made available collectively via mixin
# DiseaseToPhenotypicFeatureAssociation, 
# GeneToPhenotypicFeatureAssociation,
# VariantToPhenotypicFeatureAssociation,
# EntityToPhenotypicFeatureAssociation,
# occurs_in_disease, has_phenotype, has_manifestation, contributes_to,
# disease_has_basis_in
  represented_as: edge
  source: [Protein, Disease]
  target: Phenotype
  label_as_edge: Is_Associated_With
  preferred_id: custom
  
Is_Related_To: 
# GeneToPhenotypicFeatureAssociation,
# VariantToPhenotypicFeatureAssociation,
# EntityToPhenotypicFeatureAssociation,
# EntityToDiseaseAssociationMixin,
# GeneToDiseaseAssociation, 
# DruggableGeneToDiseaseAssociation
# occurs_in_disease, has_phenotype, has_manifestation, contributes_to,
# disease_has_basis_in
  represented_as: edge
  preferred_id: custom
  source: Protein
  target: Disease
  label_as_edge: Is_Related_To

Targets: # DrugToGeneAssociation, has_target (Disease -> Gene), affects
  represented_as: edge
  preferred_id: custom
  source: [Drug, Compound]
  target: Protein
  label_as_edge: Targets

Is_Involved_In: 
# GeneToPathwayAssociation,
# contributes_to, has_participant, participates_in
  represented_as: edge
  source: Protein
  target: Pathway
  label_as_edge: Is_Involved_In
  preferred_id: custom

Indicates: 
# DrugToDiseaseAssociation (NOT IN BIOLINK), treated_by
# (DiseaseOrPhenotypicFeature -> ChemicalOrDrugOrTreatment) 

# biolink has contraindicated_for (Drug -> DiseaseOrPhenotypicFeature)
# but not indicated_for
  represented_as: edge
  preferred_id: custom
  source: Drug
  target: Disease
  label_as_edge: Indicates

Modulates: 
# DiseaseToPathwayAssociation (NOT IN BIOLINK),
# GeneToPathwayAssociation, disease_has_basis_in,
# has_molecular_consequence, occurs_in_disease
  represented_as: edge
  preferred_id: custom
  source: Disease
  target: Pathway
  label_as_edge: Modulates



## CROssBAR list of source database attributes
# UniProtKB (related MongoDB collections: Proteins):
# accession(protein,UniProt)
# ec
# fullName
# gene(symbol)
# go
# interpro
# omim
# orphanet
# pfam
# reactome
# taxId

# IntAct (related MongoDB collections: Intact):
# accession(protein,UniProt)
# confidence
# gene(symbol)

# EFO (related MongoDB collections: EFO disease terms):
# doid
# label
# mesh
# oboId
# omimId
# synonym

# HPO (related MongoDB collections: HPO):
# genesymbol
# hpotermname
# synonym

# ChEMBL (related MongoDB collections: Molecules, Targets, Assays, Activities):
# assayChemblId
# assayType
# assayOrganism
# moleculeChemblId
# canonicalSmiles
# inchiKey
# pchemblValue
# targetChemblId
# accession(protein,UniProt)
# targetIds
# DrugBank (related MongoDB collections: Drugs):
# accession(target protein,UniProt)
# chemblId
# identifier
# name
# pubchemCid

# PubChem (related MongoDB collections: PubChem Bioassay Sids, PubChem Biossays, PubChem Compounds, PubChem Substances):
# canonicalSmiles
# cid
# inchiKey
# accession(target protein,UniProt)
# assayPubchemId
# ncbiProteinId
# sids
# outcome