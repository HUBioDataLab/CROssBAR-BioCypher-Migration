Title: BioCypher graph schema configuration file for CROssBAR v2

# This configuration file establishes the hierarchy and connectivity in a newly
# set-up BioCypher property graph database. Naming should adhere to Biolink
# nomenclature (available at https://biolink.github.io/biolink-model/ or via 
# the python module 'biolink-model-toolkit').

# The BioCypher YAML file specifies only the leaves of the hierarchy tree of
# the desired graph; the hierarchical structure of entities will be derived 
# from the Biolink model. Thus, only the immediate constituents of the graph
# need to be specified in the schema config.


# ---
# "Named Things"
# ---
# The implementation of named things is fairly straightforward, since they are
# usually represented in node form, which is also the Biolink recommendation.
# The same is not true for associations.
#
# A little more complex is the representation of aggregates of named things, 
# for instance in the case of functional protein complexes. These are represented
# by so-called "mixins", which are not officially part of the hierarchy.

# Protein: # this is the Biolink entity name and will be used as the node label
         #do not modify or else the Biolink translation will fail
  # represented_as: node
  # preferred_id: UniProtKB # this is the Biolink spelling of the identifier used
  #it represents a CURIE URI prefix
  # label_in_input: protein # modify this to allow translation
  # this is the entity name (ie, type) in the input database
  
 
Protein:
  represented_as: node
  preferred_id: UniProtKB
  label_in_input: Protein

Gene:
  represented_as: node
  preferred_id: HGNC
  label_in_input: Gene

OrganismTaxon:
  represented_as: node
  preferred_id: NCBITaxon
  label_in_input: Organism

SmallMolecule:  # drug has only RXCUI, NDC, UMLS identifiers
  represented_as: node
  preferred_id: DRUGBANK
  label_in_input: Drug
  
MolecularMixture: # there is no compound in Biolink. could be molecular mixture
  represented_as: node
  preferred_id: CHEMBL.COMPOUND
  label_in_input: Compound
  
Disease:
  represented_as: node
  preferred_id: [MONDO, EFO, ORPHANET, KEGG.DISEASE]
  label_in_input: [MONDO, EFO, Orphanet, KEGG.DISEASE]

Cell:
  represented_as: node
  preferred_id: CL
  label_in_input: Cell

Tissue:
  represented_as: node
  preferred_id: UBERON
  label_in_input: Tissue

CellLine:
  represented_as: node
  preferred_id: CCLE
  label_in_input: CellLine

SubjectOfInvestigation:
  represented_as: node
  preferred_id: custom
  label_in_input: Patient
  
Phenotype:
  represented_as: node
  preferred_id: HP
  label_in_input: HPO
      
ProteinDomain:
  represented_as: node
  preferred_id: InterPro
  label_in_input: Domain

Pathway:
  represented_as: node
  preferred_id: [REACT, KEGG.PATHWAY]
  label_in_input: [Pathway, kegg_Pathway]

BiologicalProcess:
  represented_as: node
  preferred_id: GO
  label_in_input: Function

SideEffect:
  represented_as: node
  preferred_id: SIDER
  label_in_input: Side_effect

# ---
# Associations
# ---
# Associations are not supposed to be represented in node form as per the 
# specifications of Biolink. However, in an analytic context, it often makes 
# sense to represent interactions as nodes in Neo4j, because it enables, for
# instance, the annotation of a relationship with a publication as source of
# evidence (also known as reification in the knowledge graph world). 

# The Biolink specifications for these types of relationships do 
# not go into depth; for example, the hierarchy for molecular interactions
# (ie, "associations") ends at "PairwiseMolecularInteraction", there are no 
# explicit terms for protein-protein-interaction, phosphorylation, miRNA-
# targeting, etc. Biolink proposes to use interaction identifiers from 
# ontologies, such as https://www.ebi.ac.uk/ols/ontologies/mi/.

PostTranslationalInteraction:
  represented_as: edge
  label_as_edge: Interacts_With
  preferred_id: custom
  source: Protein
  target: Protein
  label_in_input: PPI

ProteinDomainToProteinAssociation:
  represented_as: edge
  label_as_edge: Has_Domain
  preferred_id: custom
  source: Protein
  target: ProteinDomain
  label_in_input: has

ProteinToBiologicalProcessAssociation:
  represented_as: edge
  label_as_edge: Enables
  preferred_id: custom
  source: Protein
  target: BiologicalProcess
  label_in_input: enables

ProteinToCellularComponentAssociation:
  represented_as: edge
  label_as_edge: Localizes_To
  preferred_id: custom
  source: Protein
  target: CellularComponent
  label_in_input: localizes_to

ProteinToPathwayAssociation:
  represented_as: edge
  label_as_edge: Takes_Part_In
  preferred_id: custom
  source: Protein
  target: Pathway
  label_in_input: takes_part_in
  
# Is_Associated_With: 
# could be broken up and made available collectively via mixin
# DiseaseToPhenotypicFeatureAssociation, 
# GeneToPhenotypicFeatureAssociation,
# VariantToPhenotypicFeatureAssociation,
# EntityToPhenotypicFeatureAssociation,
# occurs_in_disease, has_phenotype, has_manifestation, contributes_to,
# disease_has_basis_in
GeneToPhenotypicFeatureAssociation:
  represented_as: edge
  preferred_id: custom
  source: Protein
  target: Phenotype
  label_as_edge: Is_Associated_With
  label_in_input: hpodis

# possible pull request: ProteinToPhenotypicFeatureAssociation
DiseaseToPhenotypicFeatureAssociation:
  represented_as: edge
  preferred_id: custom
  source: Disease
  target: Phenotype
  label_as_edge: Is_Associated_With
  label_in_input: HPO
  
# Is_Related_To: 
# GeneToPhenotypicFeatureAssociation,
# VariantToPhenotypicFeatureAssociation,
# EntityToPhenotypicFeatureAssociation,
# EntityToDiseaseAssociationMixin,
# GeneToDiseaseAssociation, 
# DruggableGeneToDiseaseAssociation
# occurs_in_disease, has_phenotype, has_manifestation, contributes_to,
# disease_has_basis_in
# possible pull request: ProteinToDiseaseAssociation
GeneToDiseaseAssociation:
  represented_as: edge
  preferred_id: custom
  source: Protein
  target: Disease
  label_as_edge: Is_Related_To
  label_in_input: [Disease, kegg_dis_prot]

# Targets: # DrugToGeneAssociation, has_target (Disease -> Gene), affects
# possible pull request: DrugToProteinAssociation
DrugToGeneAssociation:
  represented_as: edge
  preferred_id: custom
  source: [SmallMolecule, MolecularMixture]
  target: Protein
  label_as_edge: Targets
  label_in_input: [drugChembl, Drug, Chembl]

# Is_Involved_In: 
# GeneToPathwayAssociation,
# contributes_to, has_participant, participates_in
# possible pull request: ProteinToPathwayAssociation
GeneToPathwayAssociation:
  represented_as: edge
  source: Protein
  target: Pathway
  label_as_edge: Is_Involved_In
  preferred_id: custom
  label_in_input: [Pathway, kegg_path_prot]

treated_by: 
# DrugToDiseaseAssociation (NOT IN BIOLINK), treated_by
# (DiseaseOrPhenotypicFeature -> ChemicalOrDrugOrTreatment) 

# biolink has contraindicated_for (Drug -> DiseaseOrPhenotypicFeature)
# but not indicated_for
  represented_as: edge
  preferred_id: custom
  source: Drug
  target: Disease
  label_as_edge: Indicates
  label_in_input: kegg_dis_drug

occurs_in_disease: # not in data?
# DiseaseToPathwayAssociation (NOT IN BIOLINK),
# GeneToPathwayAssociation, disease_has_basis_in,
# has_molecular_consequence, occurs_in_disease
  represented_as: edge
  preferred_id: custom
  source: Disease
  target: Pathway
  label_as_edge: Modulates
  label_in_input: kegg_dis_path

ChemicalToChemicalAssociation:
  represented_as: edge
  preferred_id: custom
  source: SmallMolecule
  target: SmallMolecule
  label_as_edge: ChemicalToChemicalAssociation
  label_in_input: [Prediction, predictionChembl]


